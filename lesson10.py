"""
1. Создать проект
2. Инициализировать гит
git init
3. Создать окружение
4. Добавить в гитигнор файлы окружения
5. Сделать файл lesson_10.py
5.1 Создать .gitignore
5.2 Добавить в него виртуальное окружение
- Pycharm создат автоматически
- VS Code
    
    1. python -m venv vevn
        venv/Scripts/activate
    2. Что более преподчитетльнее, потому что он запомнит окружение
    и будет включать его при октрытии проекта
    ctrl + shift + P
    Выбор интерпретатора
    Создание виртуальной среды
    Venv
    Выбрать интерпретатор из системных (у вас может быть несколько версий быть в системе)

6. Сделать первые коммиты
- git add <file_name>
- git commit -m "message"
7. Добавить файлы в гит
8. Закоммитить изменения
9. Запушить изменения в гитхаб

Настройка Гита - имя и email (потребуются 1 раз)
git config --global user.name "name"
git config --global user.email "email"
"""
# Функция для проверки, является ли число палиндромом
def is_palindrome(num):
    # Преобразуем число в строку для удобства сравнения
    str_num = str(num)
    # Получаем реверс (обратный порядок) строки
    reversed_num = str_num[::-1]
    
    # Сравниваем оригинальную строку с реверсированной
    if str_num == reversed_num:
        return True  # Если совпадают, возвращаем True (палиндром)
    else:
        return False  # Иначе возвращаем False (не палиндром)

# Запрос числа у пользователя
user_input = input("Введите число для проверки: ")

# Проверка, является ли введенное значение числом
if user_input.isdigit():
    number = int(user_input)  # Преобразуем входное значение в целое число
    # Вызываем функцию и выводим результат
    if is_palindrome(number):
        print(f"{number} является палиндромом.")
    else:
        print(f"{number} не является палиндромом.")
else:
    print("Пожалуйста, введите корректное целое число.")

pip = "Что то добавил я"

"""
1234567
"""
"""
Дудосю
"""
