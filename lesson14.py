"""
Урок 14
16.12.2024
Python: Разбор HW. Модули, импорты и работа с файлами. Урок: 14

̶1̶.̶ ̶Р̶а̶з̶б̶о̶р̶ ̶Д̶о̶м̶а̶ш̶н̶е̶г̶о̶ ̶з̶а̶д̶а̶н̶и̶я̶:̶
    -̶ ̶П̶р̶о̶в̶е̶р̶к̶а̶ ̶ф̶у̶н̶к̶ц̶и̶о̶н̶а̶л̶ь̶н̶о̶с̶т̶и̶ ̶п̶о̶г̶о̶д̶н̶о̶г̶о̶ ̶п̶р̶и̶л̶о̶ж̶е̶н̶и̶я̶
    -̶ ̶О̶с̶о̶б̶е̶н̶н̶о̶с̶т̶и̶ ̶у̶п̶к̶о̶в̶к̶и̶ ̶в̶ ̶E̶X̶E̶ ̶ч̶е̶р̶е̶з̶ ̶p̶y̶i̶n̶s̶t̶a̶l̶l̶e̶r̶

̶2̶.̶ ̶М̶о̶д̶у̶л̶ь̶н̶а̶я̶ ̶с̶и̶с̶т̶е̶м̶а̶ ̶P̶y̶t̶h̶o̶n̶:̶
̶ ̶ ̶ ̶ ̶-̶ ̶С̶о̶з̶д̶а̶н̶и̶е̶ ̶и̶ ̶и̶м̶п̶о̶р̶т̶ ̶м̶о̶д̶у̶л̶е̶й̶
̶ ̶ ̶ ̶ ̶-̶ ̶К̶о̶н̶с̶т̶р̶у̶к̶ц̶и̶я̶ ̶i̶f̶ ̶_̶_̶n̶a̶m̶e̶_̶_̶ ̶=̶=̶ ̶'̶_̶_̶m̶a̶i̶n̶_̶_̶'̶
̶ ̶ ̶ ̶ ̶-̶ ̶О̶т̶н̶о̶с̶и̶т̶е̶л̶ь̶н̶ы̶е̶ ̶и̶ ̶а̶б̶с̶о̶л̶ю̶т̶н̶ы̶е̶ ̶и̶м̶п̶о̶р̶т̶ы̶
̶ ̶ ̶ ̶ ̶-̶ ̶П̶а̶к̶е̶т̶ы̶ ̶и̶ ̶п̶о̶д̶м̶о̶д̶у̶л̶и̶

3. Работа с текстовыми файлами:
    - Открытие и закрытие файлов
    - Контекстный менеджер with
    - Методы чтения и записи файлов
    - Режимы работы файлов: r, w, a

4. Работа с JSON:
    - Сериализация и десериализация
    - Методы json.dumps() и json.loads()
    - Запись и чтение JSON-файлов
    - Практические примеры работы с JSON

5. Практика:
    - Создание модульной структуры проекта
    - Реализация записи логов в txt файл
    - Сохранение настроек приложения в JSON-файле
"""

# Работа с txt документами
# Флаги открытия файлов:
# r - открытие для чтения (по умолчанию) - откроет файл если он существует и упадёт с ошибкой если нет
# w - открытие для записи (создание нового файла, если он не существует) - создаст файл если он не существует, перезапишет если он уже существует
# a - открытие для добавления (добавление данных в конец файла) - создаст файл если он не существует, добавит данные в конец файла если он уже существует
# b - открытие в бинарном режиме
# +

# путь к файлу относительно корня проекта
txt_file = "lesson14.txt"

# открытие файла для дозаписи
# file = open(txt_file, "a", encoding="utf-8")

# Запись в файл
# file.write("Hello, world!\n")

# Закрытие файла
# file.close()

# ОТкрытие файла для чтения
# file = open(txt_file, "r", encoding="utf-8")

# Получаем список строк
# lines = file.readlines()

# Распечатаем
# print(lines)

# Получим одну строку
# line = file.readline()
# print(line, end="")

# line = file.readline()
# print(line.strip())

# line = file.readline()
# print(line.strip())

# Открытие файла для перезаписи
# with open(txt_file, "w", encoding="utf-8") as file:
#     file.write("Hello, world_1!\nHello, world_2!\nHello, world_3!\nHello, world_4!\n")

# Закрытие файла
# file.close()

# Контекстный менеджер with
with open(txt_file, "r", encoding="utf-8") as file:
    lines = file.readlines()

print(lines)


# practice - практика
# Напишите функцию
# def write_to_file(file_name: str, *data: str, mode: str = "a", encoding: str = "utf-8") -> None:
#     ...

# которая принимает название файла, данные для записи и режим работы с файлом.

# data - коллеция строк, которые нужно записать в файл
# Пишите это в цикле for line in data:


def write_to_file(
    file_name: str, *data: str, mode: str = "a", encoding: str = "utf-8"
) -> None:
    with open(file_name, mode, encoding=encoding) as file:
        for line in data:
            file.write(line + "\n")


data = ["Пришёл", "увидел", "победил"]

write_to_file("lesson14.txt", *data)
